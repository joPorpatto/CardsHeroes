{"version":3,"sources":["components/hero/HeroeInfo.js","components/Loading.js","helpers/checkPowerTeam.js","types/types.js","actions/hero.js","components/team/TeamCard.js","components/hero/Heroes.js","actions/auth.js","components/Navbar.js","components/team/Powerstats.js","components/team/Appearance.js","components/team/Team.js","components/HomeScreen.js","components/LoginScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","firebaseConfig.js","routers/AppRouter.js","reducers/authReducer.js","reducers/heroReducer.js","store/store.js","App.js","index.js"],"names":["HeroeInfo","current","useSelector","state","hero","heroId","useParams","filter","heroes","id","funcionBack","value","slice","className","style","width","src","image","url","height","alt","name","appearance","weight","biography","aliases","map","alias","work","base","to","Loading","loading","role","checkPowerTeam","powerstats","intelligence","strength","speed","durability","power","combat","types","loadingShow","dispatch","type","TeamCard","team","valuesPow","Object","values","namesPow","keys","useDispatch","heroIncluded","h","includes","onClick","e","preventDefault","goodsHeroes","alignment","badsHeroes","length","Swal","fire","payload","addHero","h2","Number","heightSum","weightSum","i","deleteHero","heightRes","weightRes","Heroes","logout","Navbar","a","auth","getAuth","signOut","Powerstats","powerStats","powers","push","powerStatsSort","sort","b","Appearance","heightNotNullTotal","weightNotNullTotal","w","toFixed","Team","HomeScreen","initialValues","validate","errores","test","onSubmit","resetForm","axios","get","then","response","data","results","catch","err","searchHero","errors","handleSubmit","handleChange","handleBlur","placeholder","onChange","onBlur","autoComplete","LoginScreen","email","password","signInWithEmailAndPassword","user","startLoginEmailPassw","touched","PrivateRoute","isAuthenticated","element","PublicRoute","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AppRouter","useState","IsLogginIn","setIsLogginIn","useEffect","onAuthStateChanged","uid","path","initialState","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","her","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90ee49fd.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\n\n\nexport const HeroeInfo = () => {\n\n        const {current} = useSelector(state => state.hero)\n        const { heroId}= useParams()\n        const heroFilter = current.filter( (heroes) =>(heroes.id===heroId))\n        const hero = heroFilter[0]\n\n        const funcionBack = (value) =>{                \n                if ((value.slice(0,2)==0)) {\n                        return \"-\"                        \n                }else{return value}\n        }\n\n\n        \n        \n        return (\n                <div className=\" row justify-content-center mt-4 mb-4 \">\n                        <div className=\"card hero-info ms-4  me-4\"style={{width:\"30rem\"}} >\n                                <div className=\"container mt-4 mb-4\">\n                                        <img src={hero.image.url} className=\" mx-auto d-block\" width=\"150\" height=\"auto\" alt={hero.name}/>\n\n                                </div>\n                                \n                                <ul className=\"list-group ms-4 me-4    \">\n                                        <li className=\"list-group-item list-group-item-primary \"><b>Weight:</b>  {funcionBack(hero.appearance.weight[1])}</li>\n                                        <li className=\"list-group-item list-group-item-primary\"><b>Height:</b> {funcionBack(hero.appearance.height[1])}</li>\n                                        <li className=\"list-group-item list-group-item-primary\"><b>Names:</b> {hero.name}</li>\n                                        <li className=\"list-group-item list-group-item-primary\"><b>Aliases:</b> {hero.biography.aliases.map((alias)=>(\n                                                <span key={alias}>{alias} - </span>\n                                        ))}</li>\n\n                                        <li className=\"list-group-item list-group-item-primary \"><b>Eye color:</b> {hero.appearance[\"eye-color\"]}</li>\n                                        <li className=\"list-group-item list-group-item-primary\"><b>Hair color:</b> {hero.appearance[\"hair-color\"]}</li>\n                                        <li className=\"list-group-item list-group-item-primary\"><b>Work base:</b> {hero.work.base}</li>\n\n                                </ul>\n                                <div className=\"card-body mx-auto d-block\">\n                                        <Link className=\"text-white\" to={`./home}`}>\n                                                Return\n                                         </Link>\n                                </div>\n                                \n                        </div>\n                </div>\n        )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const Loading = () => {\n        \n        \n        const {loading} = useSelector(state => state.hero)\n        return (\n                <div>\n                        {(loading)&&\n                        <div className=\"container text-center mt-4\">\n                                \n                                <div className=\"spinner-border \" role=\"status\">\n                                        <span className=\"visually-hidden\">Loading...</span>\n                                        </div>\n                                </div>\n                        }\n                </div>\n        )\n}\n","\n\n\nexport const checkPowerTeam = (hero) =>{\n               \n                if (hero.powerstats.intelligence === \"null\") hero.powerstats.intelligence = 0;\n                if (hero.powerstats.strength === \"null\") hero.powerstats.strength = 0;\n                if (hero.powerstats.speed === \"null\") hero.powerstats.speed = 0;\n                if (hero.powerstats.durability === \"null\") hero.powerstats.durability = 0;\n                if (hero.powerstats.power === \"null\") hero.powerstats.power = 0;\n                if (hero.powerstats.combat === \"null\") hero.powerstats.combat = 0;\n                return hero\n}","\n\n\n\n\nexport const types = {\n\n        login: '[Auth] Login',\n        logout: '[Auth] Logout',\n        \n        checkingStart: '[Auth] cheking start',\n        checkingFinish: '[Auth] checking finish',\n         loading: '[hero] loading',\n        loadingFinish: '[hero] finish',\n\n        teamHero: '[hero] team hero',\n        currentHero: '[hero] current hero',\n        removeHeros: '[hero] remove heroes',\n        deleteHero: '[hero] delete hero',\n\n        heightSum: '[hero] height sum',\n        heightRes: '[hero] height res',\n\n        weightSum: '[hero] weight sum',\n        weightRes: '[hero] weight res'\n      \n}\n\n","import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { checkPowerTeam } from \"../helpers/checkPowerTeam\";\nimport { types } from \"../types/types\";\n\n\nexport const searchHero = ({name}) => {\n\n        return async(dispatch)=>{\n\n                await axios.get(`https://superheroapi.com/api/10222829918315897/search/${name}`)\n                .then((response) =>{\n                        \n                        \n                        dispatch({\n                                type:  types.currentHero,\n                                payload: response.data.results\n                        })\n\n                        dispatch({\n                        type: types.loadingFinish\n                        })                   \n                        \n                       \n                        \n                }).catch((err) =>{\n                        dispatch({\n                        type: types.loadingFinish\n                        })                   \n                        Swal.fire(\"error\") \n                })\n        }\n}\n\nexport const loadingShow = ()=>{\n        return (dispatch)=>{\n                dispatch({\n                        type: types.loading\n                })\n        }\n}\n\n\nexport const addHero = (hero,team) => {\n        return (dispatch) =>{\n               \n                \n\n                const goodsHeroes = team.filter((h) =>{\n                        return (h.biography.alignment===\"good\")\n                })\n                 const badsHeroes = team.filter((h) =>{\n                        return (h.biography.alignment===\"bad\")\n                })\n       \n\n                if (team.length <= 5) {\n\n                        \n                                if (hero.biography.alignment===\"good\") {\n\n                                        if (goodsHeroes.length<=2) {\n                                                checkPowerTeam(hero)\n                                                Swal.fire('Agregado al equipo!', '', 'success')\n                                                dispatch({\n                                                type: types.teamHero,\n                                                payload:  hero                              \n                                                })   \n\n\n                                                \n                                        }else{\n                                                Swal.fire(\"cantidad de buenos en equipo completo\")   \n                                        }\n                                        \n                                } else{\n\n                                        if (badsHeroes.length<=2) {\n                                                checkPowerTeam(hero)\n                                                Swal.fire('Agregado al equipo!', '', 'success')\n                                                dispatch({\n                                                type: types.teamHero,\n                                                payload: hero                              \n                                                })     \n                                              \n                                        }else{\n                                                Swal.fire(\"cantidad de malos en equipo completo\")\n                                        }\n\n                                }     \n\n                        \n\n                } else{ Swal.fire(\"Equipo completo\")}  \n        \n        }\n}\n\nexport const removeHeroes = ()=> {\n        return(dispatch)=>{\n                dispatch({\n                        type: types.removeHeros\n                })\n                \n        }\n}\n\nexport  const deleteHero = (hero)=>{\n        return(dispatch)=>{\n                checkPowerTeam(hero)\n                dispatch({\n                        type: types.deleteHero,\n                        payload: hero\n                })\n        }\n        \n}\n\n\nexport  const heightSum = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.height[1].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.heightSum,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\nexport  const heightRes = (hero)=>{\n        return(dispatch)=>{\n\n                const h2=Number(hero.appearance.height[1].slice(0,3))\n                if (Number(h2)) { \n\n        \n                        dispatch({\n                                type: types.heightRes,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\nexport  const weightSum = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.weight[0].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.weightSum,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\nexport  const weightRes = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.weight[0].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.weightRes,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\n\n\n\n\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {  addHero, deleteHero, heightRes, heightSum, weightRes, weightSum } from '../../actions/hero'\nimport './style.css'\n\nexport const TeamCard = (hero) => {\n\n        const {team} = useSelector(state => state.hero)\n\n        const valuesPow = Object.values(hero.powerstats )\n        const namesPow = Object.keys(hero.powerstats )        \n        const dispatch = useDispatch()\n\n   \n\n        const handleDelete = (e)=>{\n                e.preventDefault()\n                dispatch(deleteHero(hero))\n                dispatch(heightRes(hero))\n                dispatch(weightRes(hero))\n\n        }\n        const handleAdd = (e) =>{\n                e.preventDefault()\n                dispatch(addHero(hero,team))\n                dispatch(heightSum(hero,team))\n                dispatch(weightSum(hero,team))\n        }\n\n        const heroIncluded = team.map((h) =>{\n                        return h.id=== hero.id\n                }) \n        \n                      \n        \n        return (\n                <div>\n                        <div className=\"maincontainer mb-4 \">\n                                <div className={heroIncluded.includes(true)? \"thecard\":\"\"}>\n                                        <div className=\"thefront \">\n\n                                                <h1>{hero.name}</h1>\n                                                <div className=\"container text-center \">\n\n                                                <img className= \"img-fluid  \" \n                                                        src={hero.image.url} \n                                                        alt=\"hero.name\"\n                                                        width={heroIncluded.includes(true)? \"180\":\"150\"} \n                                                        height=\"auto\"/>\n                                                </div>     \n                                                <div className={heroIncluded.includes(true)? \"d-none\":\"d-grid  mx-auto mt-3\"}>\n                                                        <button \n                                                                type=\"button\" \n                                                                className=\"btn  btn-primary \"\n                                                                onClick={handleAdd}\n                                                                >\n                                                                        Add\n                                                        </button>\n\n                                                       \n                                                       \n\n                                                </div>   \n                                                <div className={heroIncluded.includes(true)?\"d-none\":\"d-grid mx-auto \"}>\n                                                        <Link className=\"badge badge-info\" to={`./home/${hero.id}`}>\n                                                                        More info...\n                                                                </Link>                                     \n                                                \n                                                </div>  \n                                        \n                                        </div>\n\n                                                                                    \n                                        \n                  \n\n                                        <div className={heroIncluded.includes(true)? \"theback\":\"d-none\"}>\n\n                                                <h4>{hero.name}</h4>\n                                                <p>{hero.biography.alignment}</p>\n\n                                                  <div className=\"container mb-4   \">\n                                                          <div className=\"row\">\n\n                                                                <dt>Powerstats</dt>\n                                                                        {\n                                                                                namesPow.map((name,i)=>(\n                                                                                        <li   className='list-group' key={i}>\n                                                                                                {name}: {(valuesPow[i]===0)?\"null\":valuesPow[i]}\n                                                                                        </li>\n                                                                                ))\n                                                                        }\n                                                          </div>\n                                                  </div>\n                                                \n                                                <div className=\"container display-flex\">\n\n                                                        <button \n                                                                type=\"button\" \n                                                                className=\"btn btn-outline-success \"\n                                                                onClick={handleDelete}\n                                                                >\n                                                                        Remove\n                                                        </button>\n                                                        \n                                                        <Link className=\"badge badge-info\" to={`./home/${hero.id}`}>\n                                                                        More info\n                                                        </Link>\n\n                                                       \n                                                        \n\n                                                </div>                                              \n                                        </div>\n                                </div>\n                        </div>                        \n                </div>\n        )\n}\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { TeamCard } from '../team/TeamCard'\n\nexport const Heroes = () => {\n\n         const {current} = useSelector(state => state.hero)     \n\n        return (\n                <div>\n                        <hr/>\n                                <div className=\"divider\">\n                                         <br/>                        \n                                         <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4\">\n                        \n                                           {\n                                                (!!current)?\n                                                current.map(hero=>(\n                                                <TeamCard\n                                                                key={hero.id}\n                                                                {...hero}\n                                                        />\n                                                \n                                                 )):\n                                                 <h3 className='text-white'>Sin resultados...</h3>\n                                                \n                                                \n                                         }\n                                          </div>\n                                </div>\n                                <hr className=\"mt-10 mb-3\" />\n\n\n                </div>\n        )\n}\n","import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport Swal from \"sweetalert2\";\nimport { types } from \"../types/types\";\n\n\nexport const startLoginEmailPassw = ({email, password}) => {\n        return (dispatch) =>{\n                const auth = getAuth();\n                signInWithEmailAndPassword(auth,email,password )\n                .then(  ({user}) => {\n                        dispatch({type: types.login});\n                        dispatch({type: types.loadingFinish}) \n                        })\n                        .catch((err)=> {\n                                dispatch({type: types.loadingFinish})\n                                Swal.fire('Contraseña o Password incorrectos', 'error')\n\n                        });\n        }\n}\n\nexport const startLogout = () => {\n        return async (dispatch) => {     \n                const auth = getAuth();\n                await auth.signOut();        \n                dispatch( logout() );\n        }\n};\n\n\nexport const logout = () => ({\n        type: types.logout,\n})","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startLogout } from '../actions/auth'\nimport { removeHeroes } from '../actions/hero'\n\nexport const Navbar = () => {\n\n\n         const dispatch = useDispatch()\n        \n        const handleLogout = () =>{\n                dispatch(removeHeroes())\n                dispatch(startLogout())\n        }\n\n        return (\n                <div>\n                        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark bg-gradient  \">\n                                        <div className=\"container  \">\n                                                <ul className=\"navbar-nav ms-auto \">\n                                                        <button \n                                                                className='btn btn-danger me-md-2'\n                                                                onClick={handleLogout}\n                                                                >\n                                                                 <i className=\"fas fa-sign-out-alt\"> </i>\n                                                                 <span>  Salir</span>\n                                                        </button> \n                                                </ul>\n                                        </div>\n                                </nav>\n                </div>\n        )\n}\n\n","import { useSelector } from 'react-redux'\n\nexport const Powerstats = () => {\n\n\n\n\n        const {powerstats} = useSelector(state => state.hero)\n        const valuesPow = Object.values(powerstats )\n        const namesPow = Object.keys(powerstats )       \n\n        const powerStats = []\n        var powers ={\n                name:\"\",\n                value:\" \",\n        }\n\n        for (let i = 0; i < namesPow.length; i++) {\n                powers={\n                        name: namesPow[i],\n                        value: valuesPow[i]\n                };\n                powerStats.push(powers)\n                \n        }\n\n         const powerStatsSort = (powerStats.sort(function(a, b)  { return b.value - a.value } ));\n\n        return (\n                <div  className=\"container border pb-4\">\n\n                        <div className=\"card text-center mt-4 ms-2 me-2 bg-dark text-white\">\n                                <div className=\"card-header\">\n                                        <h3>Averages Powers</h3>\n                                </div>\n                                <div className=\"card-body  \">\n                                        {\n                                                powerStatsSort.map((name,i)=>(                                                       \n                                                        \n                                                        <li className=\"list-group\" key={i}  >\n                                                                {name.name}: {name.value}\n\n                                                        </li>\n                                                ))\n                                        }\n                                </div>\n                                \n                        </div>\n                </div>\n        )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const Appearance = () => {\n\n\n\n        const {height,weight,team} = useSelector(state => state.hero)\n\n       \n\n        const heightNotNullTotal = team.filter((hero)=>{\n                if (Number(hero.appearance.height[1].slice(0,3))) {\n                        return hero                        \n                } \n        })\n        const weightNotNullTotal = team.filter((hero)=>{\n                if (Number(hero.appearance.weight[0].slice(0,3))) {\n                        return hero                        \n                }\n        })\n\n        let h = Number(height/(heightNotNullTotal.length))\n        let w =weight/(weightNotNullTotal.length)\n        if (!h) {h=0}\n        if (!w) {w=0}\n\n        return (\n               <div  className=\"container border pb-4\">\n\n                        <div className=\"card text-center mt-4 ms-2 me-2 bg-dark text-white\">\n                                \n                                <div className=\"card-body\">\n                                        Average height:  {h.toFixed(0)} cm\n                                        <br/>\n                                        Average weight:  {w.toFixed(0)} lb\n                                        \n                                </div>\n                                \n                        </div>\n                </div>\n        )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { TeamCard } from './TeamCard'\nimport {Powerstats} from './Powerstats'\nimport { Appearance } from './Appearance'\n\nexport const Team = () => {\n\n        const {team} = useSelector(state => state.hero)            \n        \n        return (\n                <div>\n                        { \n                                ( team.length!==0)\n                                && (\n                                        <div>\n                                                <div className=\"container border pb-4\">                                                        \n                                                        <div className=\"divider \">            \n                                                        \n                                                                                    \n                                                                <h1 className=\"text-center mt-4 mb-4 text-white\">SELECTED TEAM </h1>     \n                                                                {/* //row row-cols-1 row-cols-md-6 g-4                            */}\n                                                                <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 \">                                \n                                                                        {\n                                                                                (!!team)\n                                                                                ? team.map(hero=>(\n                                                                                <TeamCard\n                                                                                                key={hero.id}\n                                                                                                {...hero}\n                                                                                        />\n                                                                                \n                                                                                ))\n                                                                                : <h1>no search results</h1>\n                                                                        }\n                                                                </div>\n                                                        </div>\n                                                </div>     \n\n                                                <div>                                                        \n                                                        <Powerstats/>                                        \n                                                </div>  \n                                                \n                                                <div>                                                        \n                                                        <Appearance/>                                        \n                                                </div>                                   \n                                        </div>  \n                                )\n                        }\n                </div>\n        )\n}\n","import { Field, Form, Formik } from 'formik'\nimport { useDispatch } from 'react-redux'\nimport { Loading } from './Loading'\n\nimport { loadingShow, searchHero } from '../actions/hero'\nimport { Heroes } from './hero/Heroes'\nimport { Navbar } from './Navbar'\nimport { Team } from './team/Team'\n\nconst HomeScreen = () => {\n\n        const dispatch = useDispatch()       \n\n\n        return (\n                <> \n                        <div className=\"top-header py-4 mt-4\">\n                                <div className=\"container text-center text-white mt-4\">\n                                        <h1>Show heroes cards</h1>\n                                </div>\n                        </div>\n                \n                                \n                        <Navbar/>    \n\n                        <Team/>  \n\n                        <Formik\n                                initialValues = {{name:\"\"}}\n                                validate={ (values)=>{\n                                        let errores={};\n                                        if (!values.name) {\n                                                errores.name=\"Empty space\"\n                                                \n                                        }else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.name)) {\n                                                errores.name = \"The name must have only valid characters\"\n                                        }\n                                        return errores;\n\n                                }}\n                                onSubmit={\n                                        (values,{resetForm})=>{\n                                                resetForm();\n\n                                                dispatch(loadingShow())\n                                                dispatch(searchHero(values))\n\n                                        }\n                                }\n                        >\n                                {({values,errors,handleSubmit,handleChange,handleBlur})=>(\n\n                                        <Form onSubmit={handleSubmit}>\n                                                <nav className=\"navbar d-flex justify-content-center  navbar-expand-md mt-4 navbar-dark bg-dark \">\n                                                        <div className=\"m-2 \">\n\n                                                                <div className=\"  d-flex justify-content-center\">                                       \n                                                                        \n                                                                        <Field \n                                                                                className=\"form-control me-2\" \n                                                                                type=\"text\" \n                                                                                placeholder=\"Enter hero name...\" \n                                                                                name=\"name\"\n                                                                                value={values.name}\n                                                                                onChange={handleChange}\n                                                                                onBlur={handleBlur}\n                                                                                autoComplete=\"off\"\n                                                                        />\n                                                                        <button         \n                                                                                className=\"btn btn-outline-success\"     \n                                                                                type=\"submit\"  \n                                                                                value=\"Buscar\"                                                      \n                                                                                \n                                                                                >Search</button>\n                                                                                        \n\n                                                                </div >\n                                        \n                                                                        {errors.name && \n                                                                        <p className=\"error \">{errors.name}</p>}\n                                                        </div>\n                                                        \n                                                        \n                                                </nav>\n                                        </Form>\n                                )}\n\n                        </Formik>\n\n                        <Loading/>\n                       \n                        <Heroes/>\n\n                        \n\n                        \n                </>\n\n                \n        )\n}\n\nexport default HomeScreen\n\n\n","import {  Field, Form, Formik } from 'formik'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startLoginEmailPassw } from '../actions/auth'\nimport { loadingShow } from '../actions/hero'\nimport { Loading } from './Loading'\nimport \"./style.css\"\n\n\n\n\n\nconst LoginScreen = () => {\n\n        const dispatch = useDispatch()        \n        return (\n                <div className=\"center\">\n                        <h1>Login</h1>\n                        <Formik\n                                initialValues={{email:\"prueba@cardheroes.com\", password:\"\"}}\n                                validate={(values)=>{\n                                       \n                                       let errores = {};\n\n                                       if (!values.email) {\n                                               errores.email = \"Ingresar correo\"\n                                       }else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(values.email)) {\n                                               errores.email = \"El correo de poseer caracteres válidos\"\n                                       }\n\n                                       if (!values.password) {\n                                               errores.password =\"Ingresar contraseña\"\n                                               \n                                       }\n\n                                       return errores;\n\n                               }}\n                                onSubmit={\n                                        (values, {resetForm}) =>{    \n                                                resetForm();   \n                                                dispatch(loadingShow())                                         \n                                                dispatch(startLoginEmailPassw(values));\n                                        }\n                                }\n                        >\n                                {( {values,errors,touched,handleSubmit,handleChange,handleBlur}) =>(\n                                        <Form onSubmit={handleSubmit}>  \n\n                                                <div className=\"txt_field\">\n                                                        <Field \n                                                                type=\"text\" \n                                                                name=\"email\"\n                                                                autoComplete=\"off\"\n                                                                value={values.email}\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                />    \n                                                        <span></span>\n                                                        <label>Email</label>   \n                                                                {touched.email && errors.email && <p className=\"error\">{errors.email}</p> }                                   \n                                                </div>\n                                        \n                                                <div className=\"txt_field\">                                        \n                                                                <Field \n                                                                        type=\"password\" \n                                                                        name=\"password\"\n                                                                        autoComplete=\"off\"\n                                                                        value={values.password}\n                                                                        onChange={handleChange}\n                                                                        onBlur={handleBlur}\n                                                                        />    \n                                                                <span></span>\n                                                                <label>Password</label> \n                                                                        {touched.password \n                                                                        && errors.password \n                                                                        && <p className=\" error\"> \n                                                                        {errors.password}</p>}               \n                                                </div>\n                                                <Loading/>\n                                        \n                                                <input \n                                                        type=\"submit\" \n                                                        value=\"Enviar\"\n                                                />     \n                                        </Form> \n                                )}\n                        </Formik>\n                        \n\n                </div>    \n        )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({isAuthenticated, element,}) => {\n        \n        return (\n                (isAuthenticated)\n                        ? (element)\n                        : (<Navigate to=\"/login\"/>)\n        )\n}\n\nPrivateRoute.propTypes = {\n        isAuthenticated: PropTypes.bool.isRequired,\n        element: PropTypes.object.isRequired\n}","import React from 'react'\nimport { Navigate } from 'react-router'\nimport PropTypes from 'prop-types'\n\n\nexport const PublicRoute = ({ isAuthenticated, element }) =>{\n        \n        return (\n                (!isAuthenticated)\n                        ? (element)\n                        :(<Navigate to= '/home' />)\n        )\n}\n\nPublicRoute.propTypes = {\n        isAuthenticated: PropTypes.bool.isRequired,\n        element: PropTypes.object.isRequired\n}","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyCv0SVr_U16VjHe7VOzMNqiUIv9TMwSDps\",\n  authDomain: \"cardshero-b7935.firebaseapp.com\",\n  projectId: \"cardshero-b7935\",\n  storageBucket: \"cardshero-b7935.appspot.com\",\n  messagingSenderId: \"746967453810\",\n  appId: \"1:746967453810:web:574c601887d3f859c9b2eb\"\n};\n\ninitializeApp(firebaseConfig)","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    \n  } from 'react-router-dom';\nimport { HeroeInfo } from '../components/hero/HeroeInfo';\nimport HomeScreen from '../components/HomeScreen';\nimport LoginScreen from '../components/LoginScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { getAuth ,onAuthStateChanged} from 'firebase/auth';\nimport '../firebaseConfig';\nimport { useState } from 'react';\nimport { types } from '../types/types';\n\n\n\n\nexport const AppRouter = () => {\n\n        const dispatch = useDispatch()\n        const [IsLogginIn, setIsLogginIn] = useState(false)        \n\n        useEffect(() => {\n                const auth = getAuth();\n                onAuthStateChanged(auth,  async (user) =>{\n                        if (user?.uid) {\n                                dispatch({type: types.login});\n                                setIsLogginIn(true)\n                        }else {                                \n                                setIsLogginIn(false)\n                        }\n                })\n        }, [dispatch] )\n        return (\n                \n                <Router>\n                        <Routes>\n                                <Route\n                                        path='/*'\n                                        element={\n                                                <PrivateRoute\n                                                        isAuthenticated={IsLogginIn}\n                                                        element={<HomeScreen/>}\n                                                />\n                                        }\n                                />\n\n                                <Route\n                                        path='/login'\n                                         element={\n                                                <PublicRoute\n                                                        isAuthenticated={IsLogginIn}\n                                                        element={<LoginScreen/>}\n                                                />\n                                        }\n                                />\n                                <Route\n                                        path='/home/:heroId'\n                                         element={\n                                                <PrivateRoute\n                                                        isAuthenticated={IsLogginIn}\n                                                        element={<HeroeInfo/>}\n                                                />\n                                        }\n                                />\n                        </Routes>\n                        \n                </Router>\n\n        )\n}\n","import { types } from \"../types/types\";\n\n\nconst initialState ={\n        active:false,\n}\n\nexport const authReducer = (state={initialState}, action) =>{\n        switch (action.type) {\n\n                case types.login:\n                        return {\n                                ...state,\n                                active:true,\n                                \n                        }\n                case types.logout:\n                return {\n                        ...initialState\n                }\n                default:\n                        return state;\n        }\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState ={\n        \n        team: [],\n        current: [],\n        powerstats: {\n                intelligence:0,\n                strength: 0,\n                speed: 0,\n                durability: 0,\n                power: 0,\n                combat: 0,\n        },\n        height: 0,\n        weight:0,\n        loading: false,\n\n}\n\n\n\n\nexport const heroReducer = (state=initialState, action) =>{\n        switch (action.type) {\n                \n                case types.loading:\n                        return {\n                                ...state,\n                                loading: true\n\n                        }\n                case types.loadingFinish:\n                        return {\n                                ...state,\n                                loading: false\n\n                        }\n                \n                case types.teamHero:\n                        return {\n                                ...state,\n                                team: [...state.team,action.payload ],    \n                                powerstats:{\n                                        intelligence:\n                                                state.powerstats.intelligence + Number(action.payload.powerstats.intelligence),\n                                                strength: state.powerstats.strength + Number(action.payload.powerstats.strength),\n                                                speed: state.powerstats.speed + Number(action.payload.powerstats.speed),\n                                                durability:state.powerstats.durability + Number(action.payload.powerstats.durability),\n                                                power: state.powerstats.power + Number(action.payload.powerstats.power),\n                                                combat: state.powerstats.combat + Number(action.payload.powerstats.combat),\n                                }  \n\n                        }         \n                case types.heightSum:\n                        return {\n                                ...state,\n                                height: state.height + action.payload\n                        }  \n                case types.heightRes:\n                        return{\n                                ...state,\n                                height: state.height - action.payload\n                        }  \n                          \n                case types.weightSum:\n                        return {\n                                ...state,\n                                weight: state.weight + action.payload\n                        }  \n                case types.weightRes:\n                        return{\n                                ...state,\n                                weight: state.weight - action.payload\n                        }                     \n                        \n                 case types.currentHero:\n                        return {\n                                ...state,\n                                current: action.payload,\n                                \n                        }  \n                case types.removeHeros:\n                        return {\n                                ...initialState\n                        }    \n                case types.deleteHero:\n                        \n                        return {\n                                ...state,\n                                team: state.team.filter(her => her.id !== action.payload.id ),  \n                                powerstats:{\n                                        intelligence:\n                                                state.powerstats.intelligence - Number(action.payload.powerstats.intelligence),\n                                                strength: state.powerstats.strength - Number(action.payload.powerstats.strength),\n                                                speed: state.powerstats.speed - Number(action.payload.powerstats.speed),\n                                                durability:\n                                                state.powerstats.durability - Number(action.payload.powerstats.durability),\n                                                power: state.powerstats.power - Number(action.payload.powerstats.power),\n                                                combat: state.powerstats.combat - Number(action.payload.powerstats.combat)\n                                }    \n                        }      \n                        \n                default:\n                        return state;\n        }\n\n}","\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport thunk from 'redux-thunk'\nimport { heroReducer } from '../reducers/heroReducer';\n\n\nconst composeEnhancers = (\n        typeof window !== 'undefined' \n        && \n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n        || compose;\n\n\nconst reducers = combineReducers({\n        auth: authReducer,\n        hero: heroReducer\n\n})\n\n\n\nexport const store = createStore(\n        reducers,\n       composeEnhancers(\n                applyMiddleware(thunk)\n        )\n\n        )","import { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\n\n\n\nfunction App() {\n  return (\n          <Provider store={store}>\n                <AppRouter/>\n          </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}